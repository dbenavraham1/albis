#!/bin/bash -x

# Setup fedora atomic ceph cluster
mkdir -p /opt/vmlocal/kvm/guests
cd /opt/vmlocal/kvm/guests
rm -rf udvm1
mkdir -p udvm1/config
cd udvm1

virsh destroy udvm1
virsh undefine --nvram udvm1

curl -O https://download.fedoraproject.org/pub/alt/atomic/stable/Fedora-Atomic-27-20180201.0/CloudImages/x86_64/images/Fedora-Atomic-27-20180201.0.x86_64.qcow2

cat <<EOF > config/udvm1.xml
<domain type='kvm'>
  <name>udvm1</name>
  <description>Upsidedown vm 1</description>
  <memory unit='KiB'>2097152</memory>
  <vcpu placement='static'>1</vcpu>
  <os>
    <type arch='x86_64' machine='pc-i440fx-2.11'>hvm</type>
    <boot dev='hd'/>
  </os>
  <features>
    <acpi/>
    <apic/>
  </features>
  <cpu mode='custom' match='exact' check='partial'>
    <model fallback='allow'>Nehalem</model>
  </cpu>
  <clock offset='utc'>
    <timer name='rtc' tickpolicy='catchup'/>
    <timer name='pit' tickpolicy='delay'/>
    <timer name='hpet' present='no'/>
  </clock>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>restart</on_reboot>
  <on_crash>destroy</on_crash>
  <pm>
    <suspend-to-mem enabled='no'/>
    <suspend-to-disk enabled='no'/>
  </pm>
  <devices>
    <emulator>/usr/bin/qemu-system-x86_64</emulator>
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/opt/vmlocal/kvm/guests/udvm1/Fedora-Atomic-27-20180201.0.x86_64.qcow2'/>
      <target dev='vda' bus='virtio'/>
    </disk>
    <disk type='file' device='cdrom'>
      <driver name='qemu' type='raw'/>
      <source file='/opt/vmlocal/kvm/guests/udvm1/init.iso'/>
      <target dev='hda' bus='ide'/>
      <readonly/>
    </disk>
    <disk type='block' device='disk'>
      <driver name='qemu' type='raw' />
      <source dev='/dev/vdb' />
      <target dev='vdb' bus='virtio' />
    </disk>
    <console type='pty'>
      <target type='serial' port='0'/>
    </console>
    <channel type='unix'>
      <target type='virtio' name='org.qemu.guest_agent.0'/>
    </channel>
    <input type='mouse' bus='ps2'/>
    <input type='keyboard' bus='ps2'/>
    <graphics type='vnc' port='-1' autoport='yes' listen='0.0.0.0'>
      <listen type='address' address='0.0.0.0'/>
    </graphics>
    <video>
      <model type='cirrus' vram='9216' heads='1'/>
    </video>
    <memballoon model='virtio'>
    </memballoon>
    <rng model='virtio'>
      <backend model='random'>/dev/urandom</backend>
    </rng>
EOF

# Setup network
declare -A PF_PCI_BDF
pfi=0
NIC_DIR="/sys/class/net"
for i in $( ls $NIC_DIR) ;
do
    if [ -d "${NIC_DIR}/$i/device" -a ! -L "${NIC_DIR}/$i/device/physfn" ]; then
        PF_PCI_BDF[$pfi]=$PF_PCI
	    ((pfi++))
    fi
done

NUM_PFs=${#PF_PCI_BDF[@]}
if [[ $NUM_PFs -gt 0 ]]; then
    PFDEVICE=0
    DOMAIN=$(echo ${PF_PCI_BDF[$PFDEVICE]} | awk '{match($1,"([0-9]+):([0-9]+):([0-9]+).([0-9]+)",a)}END{print a[1]}')
    BUS=$(echo ${PF_PCI_BDF[$PFDEVICE]} | awk '{match($1,"([0-9]+):([0-9]+):([0-9]+).([0-9]+)",a)}END{print a[2]}')
    SLOT=$(echo ${PF_PCI_BDF[$PFDEVICE]} | awk '{match($1,"([0-9]+):([0-9]+):([0-9]+).([0-9]+)",a)}END{print a[3]}')
    FUNCTION=$(echo ${PF_PCI_BDF[$PFDEVICE]} | awk '{match($1,"([0-9]+):([0-9]+):([0-9]+).([0-9]+)",a)}END{print a[4]}')
cat <<EOF >> config/alcc_setup.xml
    <hostdev mode='subsystem' type='pci' managed='yes'>
      <source>
	    <address type='pci' domain='0x$DOMAIN' bus='0x$BUS' slot='0x$SLOT' function='0x$FUNCTION'/>
      </source>
    </hostdev>
EOF
fi

cat <<EOF >> config/udvm1.xml
  </devices>
</domain>
EOF

cat <<EOF > user-data
instance-id: udvmid1
local-hostname: udvm1
EOF

cat <<EOF > meta-data
#cloud-config
password: atomic
ssh_pwauth: True
chpasswd: { expire: True }

ssh_authorized_keys:
  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD1+qwWHMFQu0P8tHBaLrJvKiBfvieCXP3n0ET1YOpWn+56ibbUFJCXnBTAubx9s991R6eweFobYojJdytrxMh2zPKuCHD/pUKCpEh/ZWO/MO6PERK9F3tSOYSxHzaVJ5z0Yj/W6xWd2eoKNVjN1kuBNQQrbWbGyTvf3WPNmQQ7+zUf70YkhnBHQYOMA3MTQ5yl9UsybG8GfwtMtwBGeCSwFg50m1UgFECHgM3oiyzY7NLBgTHgkrkvqLf4Z062gJ/fB+/Yne8/dh8fqKB2VCUQ8eN0AspFa6czzgyrIYmxoO+KJNks+gT5mPY02loroq+Ee78fL+51eLfcSXnu6UwN root@upsidedownvm1
  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDaGLHzNBlg+aF455ViJGPIUIvTIpoNlYDCyaoohhqqf9F1E38CoX3iQz/mwZDFFkdGb9VrP9GIXAmf89zfxSOhQJ/1jw7p33oHgNIHQXvm08Ax1AdwxPRIibTGoMkIyCZsVa8kYV6uCSJA3zerD6+i12UxxU426/5JtOTQf+Xhx9ENtiT9xV5UuNCodF1czqkl3QQGPeOzO42nYvsZNaX5ZlEifhU2Kdsyy7RO3RNjIBCqthhynS4g0OrdIuH40U2Jevn21xFSJRlZiAkzYTHpdgdnszokatsXKIN2WCXYVXzKOh4WzZJXbh+p6HjuG5EnqsPuABRnhi3qXMIidM38pjHeZMdOmTuySfTRibM6ufsIzaQWsSWlM1zWPa/FXsNbKG3M6XQE2yBalfMUe6VQliO2r8lSfalDVIUBDNnPCQYrPTmaqA4zwSyCPy52hxBn09Sc2Tjp2xbaCa73ACnp281ByD2iH+xt7H09jmBwafCpHsAiQ7LN/BRsdl34tLxGqYRhc51qr5vRbLgZGEZFfoJ7vg7QBgLk4RaJb8M8pg0sHZTyKWfE1f6Q79ydsj6D9a8QxkK/a8tvWAEzB7bD5oyGRLY5e0qpnBgZelMOkFcjtJ1xDdqRwRGRoKyE0pMPpHBeNgBlBMiVOHaqEHQAcOoSy3QB5tUZL9tz2hCV7w== dbenavraham@gogoair.com
EOF

genisoimage -output init.iso -volid cidata -joliet -rock user-data meta-data

virsh define config/udvm1.xml
virsh start udvm1
virsh autostart udvm1

exit 1